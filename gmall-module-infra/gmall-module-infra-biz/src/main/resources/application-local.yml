--- #################### 数据库相关配置 ####################
spring:
  # 数据源配置项
#  autoconfigure:
#    exclude:
#      - de.codecentric.boot.admin.server.config.AdminServerAutoConfiguration # 禁用 Spring Boot Admin 的 Server 的自动配置
#      - de.codecentric.boot.admin.server.cloud.config.AdminServerDiscoveryAutoConfiguration # 禁用 Spring Boot Admin 的 Server 的自动配置
#      - de.codecentric.boot.admin.server.ui.config.AdminServerUiAutoConfiguration # 禁用 Spring Boot Admin 的 Server UI 的自动配置
#      - de.codecentric.boot.admin.client.config.SpringBootAdminClientAutoConfiguration # 禁用 Spring Boot Admin 的 Client 的自动配置
  datasource:
    druid:
      web-stat-filter:
        enabled: true
        stat-view-servlet:
          enabled: true
          allow: # 设置白名单，不填则允许所有访问
          url-pattern: /druid/*
          login-username: # 控制台管理用户名和密码
          login-password:
        filter:
          stat:
            enabled: true
            log-slow-sql: true # 慢 SQL 记录
            slow-sql-millis: 100
            merge-sql: true
          wall:
            config:
              multi-statement-allow: true

    dynamic: # 多数据源配置
        druid: # Druid 【连接池】相关的全局配置
          initial-size: 1 # 初始连接数
          min-idle: 1 # 最小连接池数量
          max-active: 20 # 最大连接池数量
          max-wait: 600000 # 配置获取连接等待超时的时间，单位：毫秒
          time-between-eviction-runs-millis: 60000 # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位：毫秒
          min-evictable-idle-time-millis: 300000 # 配置一个连接在池中最小生存的时间，单位：毫秒
          max-evictable-idle-time-millis: 900000 # 配置一个连接在池中最大生存的时间，单位：毫秒
          validation-query: SELECT 1 FROM DUAL # 配置检测连接是否有效
          test-while-idle: true
          test-on-borrow: false
          test-on-return: false
        primary: master
        datasource:
          master:
            url: jdbc:mysql://127.0.0.1:3306/gmall_infra?useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true&nullCatalogMeansCurrent=true # MySQL Connector/J 8.X 连接的示例
            #          url: jdbc:mysql://127.0.0.1:3306/ruoyi-vue-pro?useSSL=true&allowPublicKeyRetrieval=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai # MySQL Connector/J 5.X 连接的示例
            #          url: jdbc:postgresql://127.0.0.1:5432/ruoyi-vue-pro # PostgreSQL 连接的示例
            #          url: jdbc:oracle:thin:@127.0.0.1:1521:xe # Oracle 连接的示例
            #          url: jdbc:sqlserver://127.0.0.1:1433;DatabaseName=ruoyi-vue-pro # SQLServer 连接的示例
            #          url: jdbc:dm://10.211.55.4:5236?schema=RUOYI_VUE_PRO # DM 连接的示例
            username: root
            password: root
          #          username: sa # SQL Server 连接的示例
          #          password: JSm:g(*%lU4ZAkz06cd52KqT3)i1?H7W # SQL Server 连接的示例
          #          username: SYSDBA # DM 连接的示例
          #          password: SYSDBA # DM 连接的示例
          slave: # 模拟从库，可根据自己需要修改
            lazy: true # 开启懒加载，保证启动速度
            url: jdbc:mysql://127.0.0.1:3306/gmall_infra?useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true&nullCatalogMeansCurrent=true
            username: root
            password: root


  # Redis 配置。Redisson 默认的配置足够使用，一般不需要进行调优
  data:
    redis:
      host: 127.0.0.1 # 地址
      port: 6379 # 端口
      database: 0 # 数据库索引
      #    password: 123456 # 密码，建议生产环境开启

--- #################### 接口文档配置 ####################
springdoc:
  api-docs:
    enabled: true # 1. 是否开启 Swagger 接文档的元数据
    path: /v3/api-docs
  swagger-ui:
    enabled: true # 2.1 是否开启 Swagger 文档的官方 UI 界面
    path: /swagger-ui.html
  default-flat-param-object: true # 参见 https://doc.xiaominfo.com/docs/faq/v4/knife4j-parameterobject-flat-param 文档

knife4j:
  enable: true # 2.2 是否开启 Swagger 文档的 Knife4j UI 界面
  setting:
    language: zh_cn